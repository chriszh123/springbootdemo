<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>springbootdemo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>springbootdemo</name>
    <description>Spring Boot Vue</description>

    <!--属性-->
    <properties>
        <java.version>1.8</java.version>
        <druid.version>1.1.13</druid.version>
        <mybatis.version>2.1.2</mybatis.version>
        <lombok.version>1.18.6</lombok.version>
        <hutool.version>5.2.0</hutool.version>
    </properties>

    <!--依赖包-->
    <dependencies>
        <!--hutool-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <!--mysql驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--druid连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!--springboot start-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--springboot end-->

    </dependencies>

    <!--多环境配置-->
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <profileActive>dev</profileActive>
            </properties>
            <activation>
                <!-- 默认情况下使用dev开发配置 如 打包时不包含 -P 参数-->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 打包命令package -P test -->
        <profile>
            <id>test</id>
            <properties>
                <profileActive>test</profileActive>
            </properties>
            <activation>
                <!-- 默认情况下使用dev开发配置 如 打包时不包含 -P 参数-->
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <!-- 打包命令package -P prod -->
        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
            </properties>
            <activation>
                <!-- 默认情况下使用dev开发配置 如 打包时不包含 -P 参数-->
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>

   <!-- 项目构建-->
    <build>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <!-- 打包后文件名称：项目名-环境-版本 -->
        <finalName>${project.artifactId}-${profileActive}-${project.version}</finalName>
        <!--项目资源：打包时需要放开-->
        <!--<resources>-->
            <!--<resource>-->
                <!--<directory>src/main/resources</directory>-->
                <!--&lt;!&ndash; 开启过滤替换功能&ndash;&gt;-->
                <!--<filtering>true</filtering>-->
                <!--<includes>-->
                    <!--&lt;!&ndash; 项目打包完成的包中只包含当前环境文件 &ndash;&gt;-->
                    <!--<include>application.yml</include>-->
                    <!--<include>application-${profileActive}.yml</include>-->
                <!--</includes>-->
            <!--</resource>-->
        <!--</resources>-->

    </build>
</project>
